import os
import psycopg2
import socket
from dotenv import load_dotenv


# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
DATABASE_URL = os.getenv("DATABASE_URL")
SECRET_KEY = os.getenv("SECRET_KEY")

if not DATABASE_URL:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
try:
    conn = psycopg2.connect(DATABASE_URL)
    print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î!")
except psycopg2.OperationalError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")

if not SECRET_KEY:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: SECRET_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
def get_connection():
    try:
        conn = psycopg2.connect(DATABASE_URL)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î!")
        return conn
    except psycopg2.OperationalError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return None


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ö–æ—Å—Ç–∞
host = DATABASE_URL.split("@")[1].split(":")[0]
try:
    print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ö–æ—Å—Ç–∞: {host}")
    socket.gethostbyname(host)
    print("‚úÖ –•–æ—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!")
except socket.gaierror:
    print(f"‚ùå –û—à–∏–±–∫–∞: –•–æ—Å—Ç {host} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è URL –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def insert_url(conn, name):
    with conn.cursor() as cursor:
        cursor.execute(
            """INSERT INTO urls (name)
               VALUES (%s)
               ON CONFLICT (name) DO NOTHING;""",
            (name,)
        )
        conn.commit()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö URL
def get_all_urls(conn):
    with conn.cursor() as cursor:
        cursor.execute(
            """SELECT urls.id, urls.name, urls.created_at,
                      (SELECT created_at FROM url_checks
                       WHERE url_checks.url_id = urls.id
                       ORDER BY created_at DESC
                       LIMIT 1) AS last_status
               FROM urls
               ORDER BY urls.created_at DESC;"""
        )
        return cursor.fetchall()


# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ URL –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def url_exists(conn, name):
    with conn.cursor() as cursor:
        cursor.execute(
            "SELECT 1 FROM urls WHERE name = %s;",
            (name,)
        )
        return cursor.fetchone() is not None


# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å–∞–π—Ç–µ –∏ –µ–≥–æ –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö
def get_url_with_checks(conn, url_id):
    with conn.cursor() as cursor:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–∞–π—Ç–µ
        cursor.execute(
            "SELECT id, name, created_at FROM urls WHERE id = %s;", (url_id,)
        )
        url = cursor.fetchone()

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö
        cursor.execute(
            """SELECT id, status_code, h1, title, description, created_at
               FROM url_checks WHERE url_id = %s
               ORDER BY created_at DESC;""",
            (url_id,)
        )
        checks = cursor.fetchall()

    return url, checks


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –±–∞–∑—É
def insert_check(conn, url_id, status_code, h1, title, description):
    with conn.cursor() as cursor:
        print(f"üî• –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É: url_id={url_id}, "
              f"status_code={status_code}, h1={h1}")

        cursor.execute(
            """INSERT INTO url_checks (url_id, status_code,
                                       h1, title, description)
               VALUES (%s, %s, %s, %s, %s)
               RETURNING id, created_at;""",
            (url_id, status_code, h1, title, description)
        )
        check = cursor.fetchone()
        conn.commit()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {check}")
